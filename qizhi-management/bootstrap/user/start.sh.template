#!/bin/bash

# Copyright (c) Microsoft Corporation
# All rights reserved.
#
# MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
# to permit persons to whom the Software is furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
#
# Copyright (c) Peking University 2018
#
# The software is released under the Open-Intelligence Open Source License V1.0.
# The copyright owner promises to follow "Open-Intelligence Open Source Platform
# Management Regulation V1.0", which is provided by The New Generation of
# Artificial Intelligence Technology Innovation Strategic Alliance (the AITISA).

pushd $(dirname "$0") > /dev/null

chmod 755 *.py
chmod 755 *.sh
url_etcd="http://localhost:4001/v2/keys/users"
url_rest_server="http://localhost:{{ clusterinfo['restserverinfo']['server_port'] }}/api/v1/virtual-clusters"
while : ; do
	# Wait for etcd server ready
	http_code0=$(curl -Is -m 10 -w %{http_code} -o /dev/null $url_etcd)
	# Wait for rest server ready
	http_code1=$(curl -Is -m 10 -w %{http_code} -o /dev/null $url_rest_server)

	[[ $http_code0 -ne 200 || $http_code1 -ne 200 ]] || break
	echo "rest-server or etcd-server not ready yet"
	sleep 5
done
echo "rest-server and etcd-server are ready"

docker build -f dockerfiles/dockerfile -t localhost:{{ clusterinfo['registryinfo']['server_port'] }}/user-base-image .
docker push localhost:{{ clusterinfo['registryinfo']['server_port'] }}/user-base-image

python user.py;

./node-label.sh

kubectl create -f userjob-check.yaml

popd > /dev/null